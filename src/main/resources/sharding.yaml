dataSources:
  master:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://localhost:5432/reviews-db
    username: my_user
    password: my_password

  slave0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://localhost:64111/reviews-db
    username: my_user
    password: my_password

  slave1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://localhost:64110/reviews-db
    username: my_user
    password: my_password

mode:
  type: Standalone
  repository:
    type: JDBC

#mode:
#  type: Cluster
#  repository:
#    type: ZooKeeper
#    props:
#      namespace: governance_ds
#      server-lists: localhost:2181
#      retryIntervalMilliseconds: 500
#      timeToLiveSeconds: 60
#      maxRetries: 3
#      operationTimeoutMilliseconds: 500

rules:
  - !SHARDING
    tables:
      reviews:
        actualDataNodes: master.reviews_$->{0..1}
        tableStrategy:
          standard:
            shardingColumn: course_id
            shardingAlgorithmName: inline
        keyGenerateStrategy:
          column: course_id
          keyGeneratorName: snowflake
    shardingAlgorithms:
      inline:
        type: INLINE
        props:
          algorithm-expression: reviews_$->{course_id % 2}
          allow-range-query-with-inline-sharding: true
    keyGenerators:
      snowflake:
        type: SNOWFLAKE
        props:
          max-vibration-offset: 1
          max-tolerate-time-difference-milliseconds: 10

  - !READWRITE_SPLITTING
    dataSources:
      readwrite_ds:
        staticStrategy:
          writeDataSourceName: master
          readDataSourceNames:
            - slave0
            - slave1
        loadBalancerName: readwrite-load-balancer
    loadBalancers:
      readwrite-load-balancer:
        type: ROUND_ROBIN
props:
  proxy-hint-enabled: true
  sql-show: true
