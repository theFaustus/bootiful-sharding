spring:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
    #        default_schema: reviews
    open-in-view: false
    #    show-sql: true
    #    properties:
    #      hibernate:
    #        format_sql: true
    hibernate:
      ddl-auto: update
  application:
    name: reviews-service
  profiles:
    active: default

  shardingsphere:
    datasource:
      names: master,slave0,slave1

      master:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        jdbc-url: jdbc:postgresql://localhost:5432/reviews-db
        username: my_user
        password: my_password
        auto-commit: false

      slave0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        jdbc-url: jdbc:postgresql://localhost:64111/reviews-db
        username: my_user
        password: my_password
        auto-commit: false

      slave1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: org.postgresql.Driver
        jdbc-url: jdbc:postgresql://localhost:64110/reviews-db
        username: my_user
        password: my_password
        auto-commit: false

    rules:
      sharding:
        tables:
          reviews:
            actual-data-nodes: master.reviews_$->{0..1}
            table-strategy:
              standard:
                sharding-column: course_id
                sharding-algorithm-name: inline
            key-generate-strategy:
              column: course_id
              key-generator-name: snowflake
        sharding-algorithms:
          inline:
            type: INLINE
            props:
              algorithm-expression: reviews_$->{course_id % 2}
              allow-range-query-with-inline-sharding: true
        key-generators:
          snowflake:
            type: SNOWFLAKE
            props:
              max-vibration-offset: 1
              max-tolerate-time-difference-milliseconds: 10

      readwrite-splitting:
        data-sources:
          random:
            type: Static
            load-balancer-name: round_robin
            props:
              write-data-source-name: master
              read-data-source-names: slave0,slave1
        load-balancers:
          round_robin:
            type: ROUND_ROBIN

    props:
      proxy-hint-enabled: true
      sql-show: true


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    health:
      show-components: always
      show-details: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    inc.evil: DEBUG
server:
  port: 8070

